{"version":3,"sources":["components/Canvas/ToolBar.module.css","components/Wrapper/Wrapper.jsx","store/canvasReducer.js","components/Canvas/ToolBar.jsx","components/Canvas/Canvas.jsx","App.js","reportWebVitals.js","store/store.js","index.js","components/Wrapper/Wrapper.module.css","components/Canvas/Canvas.module.css"],"names":["module","exports","Wrapper","props","React","useState","item","setItem","JSON","parse","localStorage","getItem","localItems","setLocalItems","useEffect","stringify","onItemSubmit","trim","newItem","id","uuidv4","color","randomColor","luminosity","defaultPos","x","y","alert","list","map","index","defaultPosition","onStop","_","data","newArray","updatePos","style","backgroundColor","className","todoItem","delete","onClick","newArr","filter","deleteNode","wrapper","value","type","placeholder","onChange","e","target","onKeyPress","keyCode","which","keyPress","COLOR","UNDO","REDO","INDEX","initialState","undoList","redoList","canvasReducer","state","action","connect","canvas","setColor","toolBar","toolBarBtn","brush","colorBtn","buttonEdit","undo","redo","pushToRedo","pushToUndo","indexEdit","canvasRef","useRef","contextRef","temporarilyCanvas","setTemporarilyCanvas","lineItems","setlineItems","theCurrent","setTheCurrent","isDrawing","setIsDrawing","current","width","window","innerWidth","height","innerHeight","context","getContext","scale","lineCap","strokeStyle","lineWidth","length","isEqual","beginPath","moveTo","lineTo","closePath","stroke","deleteItem","redoItem","push","onMouseDown","onMouseUp","onMouseMove","nativeEvent","offsetX","offsetY","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d16bed86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolBar\":\"ToolBar_toolBar__3hxL7\",\"toolBarBtn\":\"ToolBar_toolBarBtn__6PV8E\",\"colorBtn\":\"ToolBar_colorBtn__2bnZp\",\"brush\":\"ToolBar_brush__37p3A\",\"buttonEdit\":\"ToolBar_buttonEdit__HfjOl\"};","import React from 'react'\r\nimport style from './Wrapper.module.css'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport {randomColor} from 'randomcolor'\r\nimport Draggable from 'react-draggable'\r\nimport { UPDATE_OPERATORS } from '@babel/types'\r\n\r\nconst Wrapper = (props) => {\r\n\r\n   const [item, setItem] = React.useState('')\r\n   const [localItems, setLocalItems] = React.useState(\r\n      JSON.parse(localStorage.getItem('elements')) || []\r\n   )\r\n\r\n   React.useEffect( () => {\r\nlocalStorage.setItem('elements', JSON.stringify(localItems))\r\n   }, [localItems])\r\n\r\n   const onItemSubmit = () => {\r\n      if (item.trim() !== '') {\r\n         const newItem = {\r\n            id: uuidv4(),\r\n            item,\r\n            color: randomColor({\r\n               luminosity: 'linght'\r\n            }),\r\n            defaultPos: {\r\n               x: 0,\r\n               y: 500\r\n            }\r\n         }\r\n         setLocalItems((localItems) => [...localItems, newItem])\r\n         setItem('')\r\n      }\r\n      else {\r\n         alert('Enter somethimg...')\r\n         setItem('')\r\n      }\r\n   }\r\n\r\n   const deleteNode = (id) => {\r\n       const newArr = [...localItems].filter(item => item.id !== id)\r\n       setLocalItems(newArr)\r\n   }\r\n   \r\nconst updatePos = (data, index) => {\r\n   let newArray = [...localItems]\r\nnewArray[index].defaultPos = {x:data.x, y: data.y}\r\nsetLocalItems(newArray)\r\n}\r\n\r\nconst keyPress = (e) => {\r\n   const code = e.keyCode || e.which\r\n   if (code === 13) {\r\n      onItemSubmit()\r\n   }\r\n}\r\n\r\n   const list = localItems.map((item, index) => {\r\n      return <Draggable\r\n      key={index}\r\n      defaultPosition={item.defaultPos}\r\n      onStop={(_, data) => {\r\n         updatePos(data, index) \r\n      }}\r\n      >\r\n         <div style={{backgroundColor: item.color}} className={style.todoItem}>\r\n{`${item.item}`}\r\n<button className={style.delete}\r\n  onClick={() => deleteNode(item.id)}>X</button>\r\n         </div>\r\n      </Draggable>\r\n   })\r\n\r\n   return <div className={style.wrapper}>\r\n    <div>\r\n<input \r\nvalue={item}\r\ntype='text'\r\nplaceholder='Enter something...' \r\nonChange={(e) => setItem(e.target.value)}\r\nonKeyPress={e => keyPress(e)}\r\n/>\r\n<button onClick={onItemSubmit}>Enter</button>\r\n   </div>\r\n   {list}\r\n   </div>\r\n} \r\n\r\nexport default Wrapper","const COLOR = 'COLOR'\r\nconst UNDO = 'UNDO'\r\nconst REDO = 'REDO'\r\nconst INDEX = 'INDEX'\r\n\r\nexport const setColor = (color) => ({ type: COLOR, color })\r\nexport const pushToUndo = (data) => ({ type: UNDO, data })\r\nexport const pushToRedo = (data) => ({ type: REDO, data })\r\nexport const indexEdit = () => ({ type: INDEX})\r\n\r\nlet initialState = {\r\n   color: 'white',\r\n   undoList: [],\r\n   redoList: [],\r\n   index: -1\r\n}\r\n\r\nconst canvasReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case COLOR: {\r\n         return {\r\n             ...state,\r\n             color: action.color\r\n         }\r\n     }\r\n      case UNDO: {\r\n         return {\r\n             ...state,\r\n             undoList: [...state.undoList, action.data]\r\n         }\r\n     }\r\n      case REDO: {\r\n         return {\r\n             ...state,\r\n             redoList: [...state.redoList, action.data]\r\n         }\r\n     }\r\n      case INDEX: {\r\n         return {\r\n             ...state,\r\n             index: state.index + 1\r\n         }\r\n     }\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport default canvasReducer;","import React from 'react'\r\nimport style from './ToolBar.module.css'\r\nimport Wrapper from '../Wrapper/Wrapper'\r\nimport {connect} from 'react-redux'\r\nimport {setColor} from '../../store/canvasReducer'\r\n\r\n\r\n\r\nconst ToolBar = (props) => {\r\n\r\n   return <div className={style.toolBar}>\r\n      <div>\r\n<button className={`${style.toolBarBtn} ${style.brush}`}/>\r\n<input className={style.colorBtn} type=\"color\" \r\nonChange={(e) => props.setColor(e.target.value)}\r\n/>\r\n</div>\r\n<Wrapper/>\r\n<div className={style.buttonEdit}>\r\n   <button onClick={props.undo}></button>\r\n   <button onClick={props.redo}></button>\r\n</div>\r\n   </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   color: state.canvas.color\r\n})\r\n\r\nexport default connect(mapStateToProps, {setColor})(ToolBar)","import React, { useRef, useEffect, useState } from 'react'\r\nimport style from './Canvas.module.css'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'underscore'\r\nimport ToolBar from './ToolBar'\r\nimport { pushToRedo, pushToUndo, indexEdit } from '../../store/canvasReducer'\r\n\r\n\r\n\r\nconst Canvas = (props) => {\r\n\r\n   const canvasRef = useRef(null)\r\n   const contextRef = useRef(null)\r\n   const [temporarilyCanvas, setTemporarilyCanvas] = useState('')\r\n   const [lineItems, setlineItems] = React.useState(\r\n      JSON.parse(localStorage.getItem('canvas')) || ''\r\n   )\r\n   const [theCurrent, setTheCurrent] = useState([...lineItems])\r\n   const [isDrawing, setIsDrawing] = useState(false)\r\n   const [color, setColor] = useState(props.color)\r\n\r\n\r\n\r\n   useEffect(() => {\r\n      const canvas = canvasRef.current\r\n      canvas.width = window.innerWidth * 2\r\n      canvas.height = window.innerHeight * 2\r\n      canvas.style.width = `${window.innerWidth}px`\r\n      canvas.style.height = `${window.innerHeight}px`\r\n\r\n\r\n      const context = canvas.getContext('2d')\r\n      context.scale(2, 2)\r\n      context.lineCap = 'round'\r\n      context.strokeStyle = `${props.color}`\r\n      context.lineWidth = 5\r\n      contextRef.current = context\r\n\r\n\r\n      setColor(props.color)\r\n         if (lineItems.length) {\r\n            lineItems.map(list => {\r\n               list.map(item => {\r\n                  if (_.isEqual(list[0], item)) {\r\n                     contextRef.current.beginPath()\r\n                     contextRef.current.moveTo(item[0], item[1])\r\n                  }\r\n                  else if (_.isEqual(list[item.length - 1], item)) {\r\n                     contextRef.current.lineTo(item[0], item[1])\r\n                     contextRef.current.closePath()\r\n                  }\r\n                  else {\r\n                     contextRef.current.lineTo(item[0], item[1])\r\n                     contextRef.current.stroke()\r\n                  }\r\n\r\n               })\r\n            })\r\n         }\r\n      \r\n         if (temporarilyCanvas.length) {\r\n            temporarilyCanvas.map(item => {\r\n               if (_.isEqual(temporarilyCanvas[0], item)) {\r\n                  contextRef.current.beginPath()\r\n                  contextRef.current.moveTo(item[0], item[1])\r\n               }\r\n               else if (_.isEqual(temporarilyCanvas[item.length - 1], item)) {\r\n                  contextRef.current.lineTo(item[0], item[1])\r\n                  contextRef.current.closePath()\r\n               }\r\n               else {\r\n                  contextRef.current.lineTo(item[0], item[1])\r\n                  contextRef.current.stroke()\r\n               }\r\n            })\r\n         }\r\n      \r\n   }, [props.color, lineItems, temporarilyCanvas])\r\n\r\nconst startDrawing = () => {\r\n   setIsDrawing(true)\r\n}\r\n\r\nconst finishDrawing = () => {\r\n   if (temporarilyCanvas !== '') {\r\n      setlineItems([...lineItems, temporarilyCanvas])\r\n      setTheCurrent([...lineItems, temporarilyCanvas])\r\n      localStorage.setItem('canvas', JSON.stringify(lineItems))\r\n   }\r\n   setTemporarilyCanvas('')\r\n   setIsDrawing(false)\r\n}\r\n\r\n\r\nconst draw = ({ nativeEvent }) => {\r\n   if (!isDrawing) {\r\n      return\r\n   }\r\n   const { offsetX, offsetY } = nativeEvent\r\n   setTemporarilyCanvas([...temporarilyCanvas, [offsetX, offsetY]])\r\n}\r\n\r\nconst undo = () => {\r\n   if (lineItems.length){\r\n      let deleteItem = lineItems\r\n      deleteItem.length--\r\n         setlineItems([...deleteItem])\r\n   }\r\n}\r\n\r\nconst redo = () => {\r\n   if (lineItems.length <  theCurrent.length){\r\n   let redoItem = [...lineItems]\r\n   redoItem.push(theCurrent[lineItems.length])\r\n      setlineItems([...redoItem])\r\n   }\r\n}\r\n\r\n\r\nreturn <div className={style.canvas}>\r\n   <ToolBar undo={undo} redo={redo}/>\r\n   <canvas\r\n      onMouseDown={startDrawing}\r\n      onMouseUp={finishDrawing}\r\n      onMouseMove={draw}\r\n      ref={canvasRef} />\r\n</div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   color: state.canvas.color,\r\n   undoList: state.canvas.undoList,\r\n   index: state.canvas.index\r\n})\r\n\r\nexport default connect(mapStateToProps, { pushToRedo, pushToUndo, indexEdit })(Canvas)","import './App.css';\nimport Canvas from './components/Canvas/Canvas';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Canvas/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore} from \"redux\"\r\nimport canvasReducer from './canvasReducer'\r\n\r\nlet reducers = combineReducers({\r\n   canvas: canvasReducer\r\n})\r\n\r\nconst store = createStore(reducers)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__1VOss\",\"todoItem\":\"Wrapper_todoItem__3g_Mp\",\"delete\":\"Wrapper_delete__3Xfuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__2O_jI\"};"],"sourceRoot":""}